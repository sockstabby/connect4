@use "_disks";
@import "globals";

@tailwind base;
@tailwind components;
@tailwind utilities;

.disabled-background {
  position: fixed;
  inset: 0px;
  background-color: rgba(0, 0, 0, 0.5);
}

.button--fancy {
  padding: 0;
  background: none;

  max-width: 344px;
  min-width: 270px;
  min-height: 52px;

  color: black;
  background-color: black;
  background-color: white;
  border-radius: 18px;
  z-index: unset;
  box-shadow: 0 15px 0 black;
}

.button--fancy:hover {
  background-color: var(--accent-color);
  color: white;
}

.button--fancy::after:hover {
  background-color: var(--game-background-color2);
  color: white;
}

.button--fancy.disabled {
  color: rgb(214, 212, 212);
  background-color: gray;
}

button.button--fancy:disabled,
button.button--fancy[disabled] {
  border: 1px solid #999999;
  background-color: #cccccc;
  color: #aca0a0;
}

.player-card-small-container {
  height: 80px;
  display: none;
}

.nav-bar button {
  width: 130px;
}

.centered {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  margin: auto;
  transform: translateY(-50%);
}

.parent {
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  position: absolute;
  z-index: 10002;
}

.modal {
  max-width: 400px;
  color: #fff;
  padding: 20px;
  background-color: var(--game-background-color1);
  border-radius: 20px;
  border: 2px solid black;
  box-shadow: 0 15px 0 black;
}

.pad-top-100 {
  padding-top: 144px;
}

button {
  background-color: var(--game-background-color2);
  border-radius: 28px;
  border: 1px solid var(--game-background-color2);
  display: inline-block;
  cursor: pointer;
  color: #ffffff;
  font-family: "Space Grotesk", sans-serif;
  font-size: 16px;
  font-weight: 700;
  padding: 16px 31px;
  text-decoration: none;
  line-height: 0px;
  height: 40px;
  text-transform: uppercase;
}

button:hover {
  border: 1px solid white;
}

button:disabled,
button[disabled] {
  cursor: not-allowed;
  color: black;
  border: 0px solid white;
}

#root {
  max-width: 1280px;
  margin: 0 auto;
  text-align: center;
  width: 100%;
  color: black;
  --player1-color: #fd6687;
  --player2-color: #ffce67;
  --accent-color: #fd6687;
}

.game-board-items {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 15px;
  margin-top: 20px;
  padding-left: 15px;
  padding-right: 15px;
}

/* Desktop */
.game-board-container {
  position: relative;
  min-width: min(62vmin);
  min-height: calc(58.3vmin + 40px);
}

.smiley-container {
  height: clamp(1rem, 10.1vmin, 3.5rem);
}

.smiley-container-yellow {
  margin-right: -7vmin;
}

.smiley-container-red {
  margin-left: -7vmin;
}

.nav-bar img {
  height: 9vmin;
}

@media only screen and (max-width: 707px) {
  .game-board-container {
    min-width: min(70vmin);
    min-height: calc(65.8vmin + 40px);
  }

  .player-card-small-container {
    margin-top: 13px;
  }

  .dropzone {
    max-width: 62vmax;
  }

  .player-card {
    display: none;
  }

  .player-card-small-container {
    display: flex;
    min-width: 62vmax;
  }

  .game-board-items {
    margin-top: 0px;
  }
}

@media only screen and (max-width: 640px) {
  .game-board-container {
    min-width: min(80vmin);
    min-height: calc(75.2vmin + 40px);
  }

  .player-card {
    display: none;
  }

  .player-card-small-container {
    display: flex;
    min-width: 62vmax;
  }

  .game-board-items {
    margin-top: 0px;
  }
}

@media only screen and (max-width: 526px) {
  .game-board-container {
    min-width: min(90vmin);
    min-height: calc(84.5vmin + 40px);
  }

  .player-card {
    display: none;
  }
  .player-card-small-container {
    display: flex;
    min-width: min(62vmax, 92vw);
    margin-top: 40px;
  }

  .game-board-items {
    margin-top: 0px;
  }
}

@media only screen and (max-width: 440px) {
  .game-board-container {
    min-width: min(95vmin);
    min-height: calc(89vmin + 40px);
  }

  .player-card {
    display: none;
  }
  .player-card-small-container {
    display: flex;
    min-width: min(62vmax, 92vw);
    margin-top: 40px;
    margin-bottom: 40px;
  }

  .game-board-items {
    margin-top: 0px;
  }
}

@media only screen and (max-height: 741px) {
  .player-card-small-container {
    margin-top: 10px;
    margin-bottom: 10px;
  }
}

/* @media screen and (min-width: 768px) and (min-height: 1024px) { */
@media screen and (min-width: 768px) and (min-height: 1024px) {
  .game-board-container {
    min-width: min(82vmin);
    min-height: calc(77vmin + 40px);
  }
  .player-card {
    display: none;
  }

  .player-card-small-container {
    display: flex;
    min-width: min(62vmax, 92vw);
    margin-top: 25px;
    margin-bottom: 40px;
  }

  .game-board-items {
    margin-top: 5px;
  }
}

.white-board {
  position: absolute;
  top: 40px;
  left: 0px;
  z-index: -1;
}

.black-board {
  position: absolute;
  top: 40px;
  left: 0px;
  z-index: -3;
}

.bottom-plate {
  position: absolute;
  bottom: 0;
  left: 0px;
  top: 68vh;
  height: 32vh;
  width: 100%;
  z-index: -1000;
  background-color: var(--game-background-color2);
  border-top-left-radius: 40px;
  border-top-right-radius: 40px;
}

.bottom-plate.yellow {
  background-color: var(--player2-color);
  background: rgb(254, 255, 103);
  background: linear-gradient(
    0deg,
    rgba(254, 255, 103, 1) 0%,
    rgba(255, 225, 103, 1) 82%
  );
}

.bottom-plate.red {
  background-color: var(--player1-color);
}

.dropzone {
  position: absolute;
  top: 0px;
  left: 0;
  height: $dropzone-height;
}

.drop-column {
  height: 100%;
  width: 100%;
}

.red:hover {
  background-image: url("assets/small-caret-red.svg");
  background-repeat: no-repeat;
  background-position: center bottom;
}

.yellow:hover {
  background-image: url("assets/small-caret-yellow.svg");
  background-repeat: no-repeat;
  background-position: center bottom;
}

.caret-container {
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  min-width: 199px;
  min-height: 164px;
  width: 30vmin;
  height: 25vmin;
  padding-block: 5vmin;
}

.win-count {
  font-size: 2rem;
}

.winner-card {
  position: absolute;
  top: calc(100vh - 190px - 20px) !important;
  left: calc(100vw / 2 - 160px) !important;
  background-color: white;
  border: 2px solid black;
  border-radius: 25px;
  width: 320px;
  height: auto;
}

.caret-container.red {
  background-image: url("assets/red-caret.svg");
}

.caret-container.yellow {
  color: black;
  background-image: url("assets/yellow-caret.svg");
}

.line-height-regular {
  line-height: 1.2rem;
}

.winner-name-text-container {
  padding-top: 8px;
}

select {
  outline: 0;
  background-color: black;
  color: white;
  border: 1px solid black;
  padding: 4px;
  border-radius: 9px;
  font-size: 1rem;
}

select.widthHeight::-webkit-scrollbar {
  width: 14px;
  height: 14px;
}

select.style::-webkit-scrollbar-track {
  border: white;
  background-color: var(--game-background-color2);
}

select.style::-webkit-scrollbar-thumb {
  background-color: var(--game-background-color1);
  border: 1px solid white;
  border-radius: 5px;
}

option:checked {
  background-color: var(--game-background-color1) !important;
}

option:active {
  background-color: var(--game-background-color1) !important;
}

option:hover {
  background-color: var(--game-background-color1) !important;
}
option {
  border-radius: 100px;
  text-align: center;
}

option::selection {
  background-color: var(--game-background-color1) !important;
}

option:focus {
  background-color: var(--game-background-color1) !important;
}

option:active {
  background-color: var(--game-background-color1) !important;
}

input[type="text"] {
  background-color: black;
  text-align: center;
  border: 0;
  border-radius: 100px;
  font-size: 1rem;
}

.player-card {
  background-color: white;
  width: 150px;
  border-radius: 20px;
  border: 2px solid black;
  box-shadow: 0 12px 0 black;
}

.player-card-small {
  background-color: white;
  width: 35vmin;
  height: 65px;
  border-radius: 12px;
  border: 2px solid black;
  box-shadow: 0 12px 0 black;
}

.disk-container > img {
  /* disk width will grow up until its parents width. */
  width: 100vw;
}

button.toggle {
  border: 0; /* 1 */
  padding: 0; /* 1 */
  background: transparent; /* 1 */
  font: inherit; /* 1 */
}

.toggle:focus {
  outline: 0; /* 1 */
}

.toggle {
  display: inline-flex; /* 1 */
  align-items: center; /* 1 */
  flex-wrap: wrap; /* 2 */
  position: relative; /* 3 */
  gap: 1ch; /* 4 */
}

.toggle__display {
  --offset: 0.1em;
  --diameter: 0.6em;

  --diameter: 0.6em;

  display: inline-flex; /* 1 */
  align-items: center; /* 1 */
  justify-content: space-around; /* 1 */

  width: calc(var(--diameter) * 2 + var(--offset) * 2); /* 2 */
  height: 25px; //calc(var(--diameter) + var(--offset) * 2); /* 2 */
  box-sizing: content-box; /* 2 */

  border: 0.1em solid rgb(0 0 0 / 0.2); /* 3 */

  position: relative; /* 4 */
  border-radius: 100vw; /* 5 */
  background-color: black; /* 6 */

  transition: 250ms;
  cursor: pointer;
}

.toggle__display::before {
  content: "";

  width: var(--diameter); /* 1 */
  height: var(--diameter); /* 1 */
  border-radius: 50%; /* 1 */

  box-sizing: border-box; /* 2 */
  border: 0.1 solid rgb(0 0 0 / 0.2); /* 2 */

  position: absolute; /* 3 */
  z-index: 2; /* 3 */
  top: 50%; /* 3 */
  left: var(--offset); /* 3 */
  transform: translate(0, -50%); /* 3 */

  background-color: #fff; /* 4 */
  transition: inherit;
}

@media (prefers-reduced-motion: reduce) {
  .toggle__display {
    transition-duration: 0ms;
  }
}

.toggle__input {
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
}

.toggle:focus .toggle__display,
.toggle__input:focus + .toggle__display {
  outline: 3px dotted #212121; /* 1 */
  outline: 3px auto -webkit-focus-ring-color; /* 1 */
}

.toggle:focus .toggle__display {
  outline: 3px dotted #212121; /* 1 */
  outline: 3px auto -webkit-focus-ring-color; /* 1 */
}

.toggle:focus:not(:focus-visible) .toggle__display,
.toggle:focus:not(:focus-visible) .toggle__display {
  outline: 0; /* 1 */
}

.toggle[aria-pressed="true"] .toggle__display::before,
.toggle__input:checked + .toggle__display {
  background-color: #e3f5eb; /* 1 */
}

.toggle[aria-pressed="true"] .toggle__display::before,
.toggle__input:checked + .toggle__display::before {
  transform: translate(100%, -50%); /* 1 */
}

.toggle[disabled] .toggle__display,
.toggle__input:disabled + .toggle__display {
  opacity: 0.6; /* 1 */
  filter: grayscale(40%); /* 1 */
  cursor: not-allowed; /* 1 */
}

.toggle__icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  color: inherit;
  fill: currentcolor;
  vertical-align: middle;
}

input:-webkit-autofill,
input:-webkit-autofill:focus {
  transition: background-color 0s 600000s, color 0s 600000s;
}
